
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent.parent.parent.parent.parent.parent 
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\adm_sett_2fa_setup_assets\step_3")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


# Entry validation and navigation functions
def validate_and_move(event, current_entry, next_entry=None):
    """Validate input and move to next entry"""
    char = event.char
    
    # Allow only digits 0-9
    if char.isdigit() and len(current_entry.get()) == 0:
        current_entry.delete(0, 'end')
        current_entry.insert(0, char)
        
        # Move to next entry if available
        if next_entry:
            next_entry.focus_set()
        elif current_entry == entry_6:
            # If this is the last entry, trigger verify button
            verify_code()
        
        return "break"  # Prevent default behavior
    
    # Block any other characters
    return "break"

def handle_backspace(event, current_entry, prev_entry=None):
    """Handle backspace key - delete from rightmost to leftmost"""
    # Find the rightmost filled entry
    entries = [entry_1, entry_2, entry_3, entry_4, entry_5, entry_6]
    
    for entry in reversed(entries):
        if entry.get():
            entry.delete(0, 'end')
            entry.focus_set()
            break
    
    return "break"  # Prevent default behavior

def verify_code():
    """Function to verify the 6-digit code"""
    code = entry_1.get() + entry_2.get() + entry_3.get() + entry_4.get() + entry_5.get() + entry_6.get()
    if len(code) == 6:
        print(f"Verifying code: {code}")
        # Add your verification logic here


window = Tk()

window.geometry("1400x841")
window.configure(bg = "#000000")


canvas = Canvas(
    window,
    bg = "#000000",
    height = 841,
    width = 1400,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    748.0,
    1400.0,
    841.0,
    fill="#800000",
    outline="")

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    409.5,
    489.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_1.place(
    x=374.0,
    y=455.0,
    width=70.0,
    height=70.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    525.5,
    489.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_2.place(
    x=490.0,
    y=455.0,
    width=70.0,
    height=70.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    642.0,
    489.5,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_3.place(
    x=607.0,
    y=455.0,
    width=70.0,
    height=70.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    758.0,
    489.5,
    image=entry_image_4
)
entry_4 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_4.place(
    x=723.0,
    y=455.0,
    width=70.0,
    height=70.0
)

entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    874.5,
    489.5,
    image=entry_image_5
)
entry_5 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_5.place(
    x=840.0,
    y=455.0,
    width=70.0,
    height=70.0
)

entry_image_6 = PhotoImage(
    file=relative_to_assets("entry_6.png"))
entry_bg_6 = canvas.create_image(
    990.5,
    489.5,
    image=entry_image_6
)
entry_6 = Entry(
    bd=0,
    bg="#000000",
    fg="#FFFFFF",
    font=("Inter Light", 30, "normal"),
    justify="center",
    insertbackground="#FFFFFF",
    highlightthickness=0
)
entry_6.place(
    x=955.0,
    y=455.0,
    width=70.0,
    height=70.0
)

# Bind events for sequential typing and validation
entry_1.bind('<KeyPress>', lambda event: validate_and_move(event, entry_1, entry_2))
entry_2.bind('<KeyPress>', lambda event: validate_and_move(event, entry_2, entry_3))
entry_3.bind('<KeyPress>', lambda event: validate_and_move(event, entry_3, entry_4))
entry_4.bind('<KeyPress>', lambda event: validate_and_move(event, entry_4, entry_5))
entry_5.bind('<KeyPress>', lambda event: validate_and_move(event, entry_5, entry_6))
entry_6.bind('<KeyPress>', lambda event: validate_and_move(event, entry_6))

# Bind backspace for all entries (deletes from rightmost to leftmost)
for entry in [entry_1, entry_2, entry_3, entry_4, entry_5, entry_6]:
    entry.bind('<BackSpace>', lambda event: handle_backspace(event, entry))

# Set focus to first entry
entry_1.focus_set()

canvas.create_text(
    356.0,
    359.0,
    anchor="nw",
    text="Enter 6 digit code:",
    fill="#FFFFFF",
    font=("Inter Light", 36 * -1)
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    700.0,
    204.0,
    image=image_image_1
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    bg="#000000",
    activebackground="#000000",
    command=verify_code,
    relief="flat"
)
button_1.place(
    x=585.0,
    y=628.0,
    width=230.94189453125,
    height=62.934051513671875
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    bg="#800000",
    activebackground="#800000",
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=471.0,
    y=774.0,
    width=457.0,
    height=41.0
)
window.resizable(False, False)
window.mainloop()
